name: CI + SonarQube Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  sonar:
    name: SonarQube Analysis
    runs-on: [ self-hosted, windows, x64 ]
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Install SonarScanner CLI
        run: |
          $zip = Join-Path $env:RUNNER_WORKSPACE 'scanner.zip'
          Invoke-WebRequest `
            -Uri 'https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-windows.zip' `
            -OutFile $zip
          Expand-Archive `
            -LiteralPath $zip `
            -DestinationPath (Join-Path $env:RUNNER_WORKSPACE 'sonar-scanner') `
            -Force

      - name: Run SonarQube analysis
        shell: powershell
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
        run: |
          $scannerDir = Get-ChildItem -Directory (Join-Path $env:RUNNER_WORKSPACE 'sonar-scanner') | Select-Object -First 1
          $exe        = Join-Path $scannerDir.FullName 'bin\sonar-scanner.bat'
          Write-Host "Invoking SonarScanner at $exe"
          $args = @(
            "-Dsonar.projectKey=assistant-bot",
            "-Dsonar.sources=backend,frontend",
            "-Dsonar.host.url=$Env:SONAR_HOST_URL",
            "-Dsonar.login=$Env:SONAR_TOKEN",
            "-Dsonar.python.coverage.reportPaths=backend/coverage-3.11.xml",
            "-Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info",
            "-Dsonar.scm.revision=${{ github.sha }}"
          )
          & $exe @args
