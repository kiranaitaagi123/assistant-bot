name: CI + SonarQube Analysis

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  # ───────────────────────────────────────────────────────────────────────────────
  # 1) Matrix’d tests + coverage artifacts
  # ───────────────────────────────────────────────────────────────────────────────
  test:
    name: Matrix Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9","3.10","3.11"]
    outputs:
      commit_sha: ${{ steps.checkout.outputs.commit }}

    steps:
      - id: checkout
        name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps & coverage tools
        run: |
          python -m pip install --upgrade pip
          pip install coverage pytest
          pip install -r backend/requirements.txt

      - name: Run backend tests + coverage
        run: |
          pytest --junitxml=backend/test_results-${{ matrix.python-version }}.xml
          coverage run --source=backend -m pytest backend
          coverage xml -o backend/coverage-${{ matrix.python-version }}.xml

      - name: Upload pytest results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: backend/test_results-${{ matrix.python-version }}.xml

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-${{ matrix.python-version }}
          path: backend/coverage-${{ matrix.python-version }}.xml

  # ───────────────────────────────────────────────────────────────────────────────
  # 2) SonarQube analysis on your self-hosted runner
  # ───────────────────────────────────────────────────────────────────────────────
  sonar:
    name: SonarQube Analysis
    needs: test
    runs-on: [ self-hosted, windows, x64 ]
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Install SonarScanner CLI
        run: |
          # define the zip path in the workspace
          $zip = Join-Path $env:RUNNER_WORKSPACE 'scanner.zip'
          Write-Host "Downloading SonarScanner CLI to $zip..."
          Invoke-WebRequest `
            -Uri 'https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-windows.zip' `
            -OutFile $zip

          Write-Host "Expanding $zip to sonar-scanner folder..."
          Expand-Archive `
            -LiteralPath $zip `
            -DestinationPath (Join-Path $env:RUNNER_WORKSPACE 'sonar-scanner') `
            -Force

      - name: Run SonarQube analysis
        shell: powershell
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
          GITHUB_SHA:     ${{ needs.test.outputs.commit_sha }}
        run: |
          $scannerDir = Get-ChildItem -Directory (Join-Path $env:RUNNER_WORKSPACE 'sonar-scanner') | Select-Object -First 1
          $exe = Join-Path $scannerDir.FullName 'bin\sonar-scanner.bat'
          Write-Host "Invoking $exe"
          & $exe `
            -Dsonar.projectKey=assistant-bot `
            -Dsonar.sources=backend,frontend `
            -Dsonar.host.url=$Env:SONAR_HOST_URL `
            -Dsonar.login=$Env:SONAR_TOKEN `
            -Dsonar.python.coverage.reportPaths=backend/coverage-3.11.xml `
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info `
            -Dsonar.scm.revision=$Env:GITHUB_SHA
